class Solution {
    static int max(TreeNode root){
        if(root==null){
            return Integer.MIN_VALUE;
        }
        int val=root.val;
        int left=max(root.left);
        int right=max(root.right);
        return Math.max(val,Math.max(left,right));
    }
    static int min(TreeNode root){
        if(root==null){
            return Integer.MAX_VALUE;
        }
        int val=root.val;
        int left=min(root.left);
        int right=min(root.right);
        return Math.min(val,Math.min(left,right));
    }
    public boolean isValidBST(TreeNode root) {
        if(root==null){
            return true;
        }
        TreeNode l=root.left;
        TreeNode r=root.right;
        if(l!=null&&root.val<=max(l)){
            return false;
        }
        if(r!=null&&root.val>=min(r)){
            return false;
        }
       if(isValidBST(l)==false||isValidBST(r)==false){
           return false;
       }
       return true;
    }
}
