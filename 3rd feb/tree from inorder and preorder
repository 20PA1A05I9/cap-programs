class Solution {
public TreeNode buildTree(int[] preorder, int[] inorder) {
    HashMap<Integer,Integer>map=new HashMap<>();
    for(int i=0;i<inorder.length;i++){
        map.put(inorder[i],i);
    }
    TreeNode root=build(preorder,0,preorder.length-1,inorder,0,inorder.length-1,map);
    return root;
}
TreeNode build(int[]preorder,int prestart,int preend,int[]inorder,int instart,int inend,Map<Integer,Integer>map){
    if(prestart>preend||instart>inend){
        return null;
        }
        TreeNode root=new TreeNode(preorder[prestart]);
        int index=map.get(preorder[prestart]);
        int left=index-instart;
        root.left=build(preorder,prestart+1,prestart+left,inorder,instart,index-1,map);
        root.right=build(preorder,prestart+left+1,preend,inorder,index+1,inend,map);
    return root;
}
}
