class Solution {
    public int[] findOrder(int numCourses, int[][] pre) {
        List<List<Integer>>adj=new ArrayList<>();
        for(int i=0;i<numCourses;i++){
            adj.add(new ArrayList<>());
        }
        int []freq=new int[numCourses];
        for(int i=0;i<pre.length;i++){
            adj.get(pre[i][1]).add(pre[i][0]);
        }
        for(int i=0;i<numCourses;i++){
            for(int j:adj.get(i)){
                freq[j]++;
            }
        }
        Queue<Integer>q=new LinkedList<>();
        for(int j=0;j<freq.length;j++){
            if(freq[j]==0){
                q.offer(j);
            }
        }
        ArrayList<Integer>data=new ArrayList<>();
        while(!q.isEmpty()){
            int a=q.poll();
            data.add(a);
            for(int k:adj.get(a)){
                freq[k]--;
                if(freq[k]==0){
                    q.offer(k);
                }
            }
        }
        if(data.size()!=numCourses){
            int[]arr={};
            return arr;
        }
        int[]res=new int[data.size()];
        for(int g=0;g<data.size();g++){
            res[g]=data.get(g);
        }
        return res;
    }
}
