class Solution {
    private boolean checker(int [][]graph,int start){
        int[]color=new int[graph.length];
        Arrays.fill(color,-1);
        Queue<Integer>q=new LinkedList<>();
        q.offer(start);
        color[start]=0;
        while(!q.isEmpty()){
            int temp=q.poll();
            for(int i:graph[temp]){
                if(color[i]==-1){
                    q.offer(i);
                    if(color[temp]==0){
                        color[i]=1;
                    }
                    else{
                        color[i]=0;
                    }
                }
                else if(color[i]==color[temp]){
                    return false;
                }
            }
        }
        return true;
    }
    public boolean isBipartite(int[][] graph) {
        for(int i=0;i<graph.length;i++){
            if(!checker(graph,i)){
                return false;
            }
        }
        return true;
    }
}
